using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Components;
using System.IO;

namespace PhpVH.CodeCoverage
{
    public class CoverageCommenter
    {
        private PluginAnnotationTable _table;

        public CoverageCommenter(PluginAnnotationTable table)
        {
            _table = table;
        }

        public void LoadTable(string file)
        {
            _table = PluginAnnotationTable.Load(file);
        }

        public void WriteCommentedFiles(string outputFolder)
        {
            _table.Items.Iter(x =>
            {
                var dir = outputFolder + "\\Coverage Comments\\" + x.Plugin;

                Directory.CreateDirectory(dir);

                x.Items.Iter(y =>
                {
                    

                    var code = File.ReadAllText(y.Filename + "b");

                    var commentedCode = y.Items
                        .OrderByDescending(z => z.Index)
                        .Select(z => new
                        {
                            Index = z.Index,
                            Comment = string.Format(
                                "\r\n/*\r\n{0}\r\nhit count: {1}\r\n{0}\r\n*/\r\n",
                                new string('-', 32),
                                z.HitCount)
                        })
                        .Aggregate(
                            new StringBuilder(code),
                            (sb, z) => sb.Insert(z.Index, z.Comment))
                        .ToString();

                    

                    TraceHelper.WriteFormat("Adding coverage comments to ");
                    Console.ForegroundColor = ConsoleColor.Cyan;
                    TraceHelper.WriteLineFormat("{0}", Path.GetFileName(y.Filename));
                    Console.ResetColor();

                    var name = dir + "\\" + y.Filename
                        .Replace(':', '$')
                        .Replace('\\', '$');

                    File.WriteAllText(name, commentedCode);
                });
            });
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace Components.Aphid.Interpreter
{
    public class AphidInteropFunction
    {
        Func<object[], object> _invoke;

        public object Invoke(params object[] parms)
        {
            return _invoke(parms);
            
        }

        private void CreateInvokeDelegate(MethodInfo method)
        {
            var parameters = method.GetParameters();
            var paramsParam = parameters
                .FirstOrDefault(x => x
                    .GetCustomAttributes(true)
                    .Any(y => y is ParamArrayAttribute));

            if (paramsParam == null)
            {
                _invoke = x => method.Invoke(null, x);
            }
            else
            {
                var paramCount = parameters.Count();
                _invoke = x =>
                {
                    object[] parameters2;
                    if (x.Length < paramCount)
                    {
                        parameters2 = new object[x.Length + 1];
                        Array.Copy(x, parameters2, x.Length);
                        parameters2[x.Length] = new object[0];
                    }
                    else
                    {
                        parameters2 = new object[paramCount];
                        var stdParamCount = paramCount - 1;
                        Array.Copy(x, parameters2, stdParamCount);
                        var paramArrayLen = x.Length - stdParamCount;
                        var paramArray = new object[paramArrayLen];
                        Array.Copy(x, stdParamCount, paramArray, 0, paramArrayLen);
                        parameters2[stdParamCount] = paramArray;
                    }

                    return method.Invoke(null, parameters2);
                };
            }
        }

        public AphidInteropFunction(Func<object[], object> function)
        {
            _invoke = function;
        }

        public AphidInteropFunction(MethodInfo method)
        {
            CreateInvokeDelegate(method);
        }
    }
}

using System;
using System.Linq;
using System.Collections.Generic;
using System.IO;
using Components.MicroScript.Interpreter;

namespace Components.MicroScript.Api
{
	[MicroScriptLibrary("standard")]
	public class StandardLibrary
	{
		[MicroScriptInteropFunction("print")]
		private static void Print(object message)
		{
			Console.WriteLine(message.ToString());
		}

		[MicroScriptInteropFunction("input")]
		private static string ReadLine()
		{
			return Console.ReadLine();
		}

		[MicroScriptInteropFunction("__list.add")]
		private static void ListAdd(List<MicroScriptObject> list, object value)
		{
			list.Add (new MicroScriptObject(value));
		}

		[MicroScriptInteropFunction("__list.contains")]
		private static bool ListContains(List<MicroScriptObject> list, object value)
		{
			var s = list.Any (x => x.Value.Equals(value));
			return  s;
			//list.Add (new MicroScriptObject(value));
		}

        [MicroScriptInteropFunction("__list.insert")]
        private static void ListAdd(List<MicroScriptObject> list, decimal index, object value)
        {
            list.Insert((int)index, new MicroScriptObject(value));
        }

		[MicroScriptInteropFunction("setListBehaviour")]
		private static void SetListBehaviour(object foo)
		{
		}
	}
}


using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using PhpVH;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Text.RegularExpressions;

namespace PhpVHUnitTests
{
    [TestClass]
    public class UriParserUnitTests : HtmlUnitTests
    {
        private UriScraper GetScraper()
        {
            return new UriScraper()
            {
                Regex = new Regex(
                    @"[/.]localhost($|/)", 
                    RegexOptions.IgnoreCase | RegexOptions.Compiled),
            };
        }

        private string[] ScrapeUris(string testName)
        {
            var html = LoadResource(testName);
            return GetScraper().Parse(html, "http://localhost/");
        }

        private void RunUriTest(string testName, string expectedUri)
        {
            var uris = ScrapeUris(testName);
            Assert.AreEqual(1, uris.Length);
            Assert.AreEqual(expectedUri, uris[0]);
        }

        [TestMethod, TestCategory("UriScraper")]
        public void MailToUriTestMethod()
        {
            Assert.AreEqual(0, ScrapeUris("MailTo").Length);
        }

        [TestMethod, TestCategory("UriScraper")]
        public void JavaScriptUriTestMethod()
        {
            Assert.AreEqual(0, ScrapeUris("JavaScriptUri").Length);
        }

        [TestMethod, TestCategory("UriScraper")]
        public void RelativeUriTestMethod()
        {
            RunUriTest("RelativeUri", "http://localhost/");
        }

        [TestMethod, TestCategory("UriScraper")]
        public void RelativeUriTestMethod2()
        {
            RunUriTest("RelativeUri2", "http://localhost/foo.php");
        }

        [TestMethod, TestCategory("UriScraper")]
        public void RelativeUriTestMethod3()
        {
            RunUriTest("RelativeUri3", "http://localhost/foo/bar.php");
        }

        [TestMethod, TestCategory("UriScraper")]
        public void AbsoluteUriTestMethod()
        {
            RunUriTest("AbsoluteUri", "http://localhost/foo.php");
        }

        [TestMethod, TestCategory("UriScraper")]
        public void AbsoluteUriTestMethod2()
        {
            RunUriTest("AbsoluteUri2", "http://localhost/foo.php");
        }

        [TestMethod, TestCategory("UriScraper")]
        public void AbsoluteUriTestMethod3()
        {
            RunUriTest("AbsoluteUri3", "http://localhost/foo.php");
        }

        [TestMethod, TestCategory("UriScraper")]
        public void UriLikeTestMethod()
        {
            Assert.AreEqual(0, ScrapeUris("UriLike").Length);
        }
        
    }
}

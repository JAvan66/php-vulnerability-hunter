//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhpVH.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PhpVH.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///$annotationArray = NULL;
        ///
        ///$annotationHandle = NULL;
        ///
        ///function Annotation($id)
        ///{
        ///	global $annotationArray;
        ///	global $annotationHandle;
        ///	
        ///	if ($annotationHandle == NULL) {
        ///		$annotationHandle = fopen($_SERVER[&apos;DOCUMENT_ROOT&apos;] . &apos;/annotation.txt&apos;, &apos;a&apos;) or die(&apos;error opening annotation file&apos;);
        ///		$annotationArray = explode(&quot;\n&quot;, $contents);
        ///	}
        ///	
        ///	if (in_array($id, $annotationArray))
        ///		return;	
        ///		
        ///	array_push($annotationArray, $id);
        ///		
        ///	fwrite($annotationHandle, $id . &quot;\n&quot;);
        ///		
        ///	//fclose($f) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Annotation {
            get {
                return ResourceManager.GetString("Annotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///class DynamicClassProbe {
        ///   function __construct() {
        ///       echo &apos;DynamicClassProbe Instantiated&apos;;
        ///   }
        ///}
        ///
        ///function DynamicFunctionProbe() {
        ///	echo &apos;DynamicFunctionProbe Called&apos;;
        ///}
        ///.
        /// </summary>
        internal static string DynamicProbes {
            get {
                return ResourceManager.GetString("DynamicProbes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///function is_array_override($var)
        ///{
        ///	return (is_array($var) || $var instanceof ArrayAccess);
        ///}
        ///
        ///function array_key_exists_override($key, $search)
        ///{
        ///	if ($search instanceof SuperGlobalOverride)
        ///		return $search-&gt;offsetExists($key);		
        ///	else
        ///		return array_key_exists($key, $search);		
        ///}
        ///
        ///function extract_override($key, $search)
        ///{
        ///	if ($search instanceof SuperGlobalOverride)
        ///		return $search-&gt;offsetExists($key);		
        ///	else
        ///		return array_key_exists($key, $search);		
        ///}
        ///*/
        ///
        ///
        ///
        ///function is_a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PhpApiOverrides {
            get {
                return ResourceManager.GetString("PhpApiOverrides", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///class SuperGlobalOverride implements arrayaccess, Iterator {
        ///	public $container = array();
        ///	private $superGlobalName;
        ///	private $hookFunction;
        ///	private $position;
        ///    public function __construct($ActualSuperGlobal, $SuperGlobalName) {
        ///		$this-&gt;container = $ActualSuperGlobal;
        ///		$this-&gt;superGlobalName = $SuperGlobalName;
        ///		$this-&gt;position = 0;
        ///    }
        ///	
        ///	private function LogValue($offset, $value)
        ///	{
        ///		
        ///		/*if ($this-&gt;superGlobalName == &apos;$_GET&apos; ||
        ///			$this-&gt;superGlobalName == &apos;$_POST&apos; || 
        ///			$th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SuperGlobalOverride {
            get {
                return ResourceManager.GetString("SuperGlobalOverride", resourceCulture);
            }
        }
    }
}
